name: CI-version

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  
jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
        toolchain:
          - stable
          - nightly
        features:
          -
          - --no-default-features
          - --no-default-features --features async
    name: Test ${{ matrix.toolchain }} on ${{ matrix.os }} (${{ matrix.features }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install Redis (Linux)
        run: |
          sudo apt update
          sudo apt install redis-server
        if: runner.os == 'Linux'
      # - name: Install Redis (macOS)
      #   run: |
      #     brew update
      #     brew install redis
      #   if: runner.os == 'macOS'
      - run: cargo test --release ${{ matrix.features }}
      - run: cargo doc --release ${{ matrix.features }}

  MSRV:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
        toolchain:
          - "1.82"
        features:
          -
          - --no-default-features
          - --no-default-features --features async
    name: Test ${{ matrix.toolchain }} on ${{ matrix.os }} (${{ matrix.features }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install Redis (Linux)
        run: |
          sudo apt update
          sudo apt install redis-server
        if: runner.os == 'Linux'
      # - name: Install Redis (macOS)
      #   run: |
      #     brew update
      #     brew install redis
      #   if: runner.os == 'macOS'
      - run: cargo test --release --lib --bins ${{ matrix.features }}